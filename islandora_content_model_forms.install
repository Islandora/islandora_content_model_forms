<?php



/**
 * @file
 *
 * Installs the required database schema for storing associations between XML Forms and Content Models.
 */

/**
 * Implements hook_schema().
 *
 * @return array
 */
function islandora_content_model_forms_schema() {
  $schema['islandora_content_model_forms'] = array(
    'description' => 'This table is used to store associations between XML Form API style form definitions, and the Content models that use them.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not NULL' => TRUE,
      ),
      'content_model' => array(
        'description' => 'The name of the content model.',
        'type' => 'varchar',
        'length' => 128,
        'not NULL' => TRUE,
      ),
      'form_name' => array(
        'description' => 'The name of the stored form.',
        'type' => 'varchar',
        'length' => 128,
        'not NULL' => TRUE,
      ),
      'dsid' => array(
        'description' => 'The datastream id of the metadata to be edited.',
        'type' => 'varchar',
        'length' => 128,
        'not NULL' => TRUE,
      ),
      'title_field' => array(
        'description' => 'The form field that you want to use for the objects label.',
        'type' => 'varchar',
        'length' => 128,
        'not NULL' => TRUE,
      ),
      'transform' => array(
        'description' => 'A xsl transform for setting the Fedora Object\'s Dublin Core metadata datastream.',
        'type' => 'varchar',
        'length' => 128,
        'not NULL' => TRUE,
      ),
      'template' => array(
        'description' => 'A sample metadata file used to prepopulate the form on ingest.',
        'type' => 'text',
        'size' => 'medium',
        'not NULL' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['islandora_content_model_forms_association_hooks'] = array(
    'description' => 'This table is used to store the status of associations defined by hooks.',
    'fields' => array(
      'id' => array(
        'description' => 'The name of the hook.',
        'type' => 'varchar',
        'length' => 128,
        'not NULL' => TRUE,
      ),
      'enabled' => array(
        'description' => 'If the hook is enabled.',
        'type' => 'int',
        'size' => 'tiny',
        'not NULL' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}
